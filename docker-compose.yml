---
services:
  hbbs:
    container_name: hbbs
    image: rustdesk/rustdesk-server:latest
    command: hbbs
    volumes:
      - ./data:/root
    network_mode: "host"

    depends_on:
      - hbbr
    restart: unless-stopped


  hbbr:
    container_name: hbbr
    image: rustdesk/rustdesk-server:latest
    command: hbbr
    volumes:
      - ./data:/root
    network_mode: "host"
    restart: unless-stopped

  samba:
    build: .
    container_name: samba
    image: ghcr.io/servercontainers/samba
    restart: always
    # note that this network_mode makes it super easy (especially for zeroconf) but is not as safe as exposing ports directly
    # more about that here: https://book.hacktricks.xyz/linux-hardening/privilege-escalation/docker-security/docker-breakout-privilege-escalation#hostnetwork
    network_mode: host
    # uncomment to solve bug: https://github.com/ServerContainers/samba/issues/50 - wsdd2 only - not needed for samba
    cap_add:
     - CAP_NET_ADMIN
    env_file:
      - /home/dulanic/docker/envs/samba.env

    volumes:
      # - /etc/avahi/services/:/external/avahi
      
      # avoid loops when mounting folders to /shares (I'd recommend explicit mapping for each share)
      - /home/dulanic/docker/samba/shares:/shares
      - /home:/shares/homes
      - /mnt/tank:/shares/tank
      - /mnt/usb-ext:/shares/usb-ext
      # - ./shares/alice-hidden:/shares/alice-hidden
      # - ./shares/bob:/shares/bob
      # - ./shares/public:/shares/public
      # - ./shares/timemachine:/shares/timemachine

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN 
    restart: unless-stopped

    environment:
      - COLLECTOR_CRON_SCHEDULE="0 0 * * *"
    ports:
      - "8084:8080" # webapp
      - "8086:8086" # influxDB admin
    volumes:
      - /run/udev:/run/udev:ro
      - ./scrutiny:/opt/scrutiny/config
      - ./influxdb:/opt/scrutiny/influxdb
    devices:
      - /dev/sda
      - /dev/sdb
      - /dev/sdc
      - /dev/sdd
      - /dev/sde
      - /dev/sdf
      - /dev/sdg
      - /dev/sdh
      - /dev/sdi
      - /dev/sdj
      - /dev/sdk
      - /dev/sdl
      - /dev/sdm
      - /dev/sdn
      - /dev/sdo
     # - /dev/sdp
      - /dev/nvme0

  bitwarden:
    container_name: bitwarden
    env_file:
      - /home/dulanic/docker/envs/bw.env
    image: vaultwarden/server
    ports:
      - '8097:80'
      - '3012:3012'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/bitwarden:/data
  caddy:
    container_name: caddy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/caddy.env
    image: ghcr.io/dulanic/caddy:v2.6.2
    ports:
      - '80:80'
      - '443:443'
    restart: always
    volumes:
      - /home/dulanic/docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - /home/dulanic/docker/caddy/subsites:/etc/caddy/subsites:ro
      - /home/dulanic/docker/caddy/mime.types:/etc/mime.types:ro
      - /home/dulanic/docker/caddy/data:/data
      - /home/dulanic/docker/caddy/config:/config
      - /home/dulanic/docker/caddy/img:/www/img:ro
      - /home/dulanic/docker/caddy/vid:/www/vid:ro
      - /home/dulanic/docker/caddy/css:/www/css:ro
      - /home/dulanic/docker/caddy/icons:/www/icons:ro
      - /home/dulanic/docker/caddy/files:/www/files:ro
      - /home/dulanic/docker/caddy/websites:/www/websites:ro
      - /home/dulanic/docker/nextcloud:/var/www/html
      - /home/dulanic/docker/recipes/media:/media
      - /mnt/tank/youtube:/www/ytdl:ro
      - /mnt/tank:/mnt/tank
  calibre-web:
    container_name: calibre-web
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: lscr.io/linuxserver/calibre-web:latest
    ports:
      - '8083:8083'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/calibre-web:/config
      - /mnt/tank/media/Books:/books
  cf_ddns_acsigning:
    container_name: cf_ddns
    environment:
      - API_KEY=$CF_API_KEY
      - ZONE=$DOMAIN
      - SUBDOMAIN=wg
    image: oznu/cloudflare-ddns:latest
    restart: always
  cloudflared:
    command:
      - tunnel
      - '--no-autoupdate'
      - '--config'
      - /etc/cloudflared/dulanic.yaml
      - '--origincert'
      - /etc/cloudflared/dulanic.pem
      - run
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    user: '1000:1000'
    volumes:
      - /home/dulanic/docker/cloudflared:/etc/cloudflared
      - /home/dulanic/docker/cloudflared/cf.log:/cloudflared/cf.log
  collabora:
    cap_add:
      - MKNOD
    container_name: collabora
    depends_on:
      - caddy
    environment:
      - extra_params=-o:ssl.enable=false
    image: collabora/code
    ports:
      - '9980:9980'
    privileged: true
    volumes:
      - /home/dulanic/docker/collabora/coolwsd.xml:/etc/coolwsd/coolwsd.xml
  dmarc-report:
    container_name: dmarc-report
    # depends_on:
    #   - mariadb
    env_file:
      - /home/dulanic/docker/envs/dmarc.env
    hostname: dmarc-report
    image: gutmensch/dmarc-report:1.4.1
    volumes:
      - ./dmarc/logs:/var/log
    restart: unless-stopped

  epic:
    container_name: epic
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: charlocharlie/epicgames-freegames:bullseye-slim
    ports:
      - '3007:3000'
    restart: unless-stopped
    volumes:
      - ./epic:/usr/app/config
  flaresolverr:
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info  
      - LOG_HTML=true
      - TZ=America/Chicago
    image: ghcr.io/flaresolverr/flaresolverr:latest
    ports:
      - '8191:8191'
    restart: unless-stopped
  freshrss:
    container_name: freshrss
    # depends_on:
    #   postgresql:
    #     condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/freshrss.env
    image: freshrss/freshrss:latest
    ports:
      - '84:80'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/freshrss/data:/var/www/FreshRSS/data
      - /home/dulanic/docker/freshrss/extensions:/var/www/FreshRSS/extensions


  heimdall:
    container_name: heimdall
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: lscr.io/linuxserver/heimdall:latest
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/heimdall:/config
  homeassistant:
    container_name: homeassistant
    # depends_on:
    #   postgresql:
    #     condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
    healthcheck:
      interval: 30s
      retries: 6
      test:
        - CMD
        - curl
        - '-f'
        - http://192.168.2.155:8123
      timeout: 10s
    image: homeassistant/home-assistant:stable
    ports:
      - '8123:8123'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
  homepage:
    container_name: homepage
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: ghcr.io/benphelps/homepage:latest
    ports:
      - '3005:3000'
    volumes:
      - ./homepage:/app/config
      - /mnt/tank:/mnt/tank:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
  mosquitto:
    container_name: mosquitto
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: eclipse-mosquitto:1.6
    ports:
      - '1883:1883'
    restart: always
    volumes:
      - mosquitto-conf:/mosquitto/config
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
  nextcloud:
    container_name: nextcloud
    depends_on:
      - caddy
      - collabora
      - redis
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/nextcloud.env
    image: lscr.io/linuxserver/nextcloud:version-26.0.2	
    ports:
      - '444:443'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/nextcloud:/config
      - /mnt/tank/photos/originals:/photos
      - /mnt/tank/nextcloud:/data
      - /dev/dri:/dev/dri
  overseerr:
    container_name: overseerr
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: sctx/overseerr:latest
    ports:
      - '5055:5055'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/overseerr:/app/config
  paperless:
    container_name: paperless
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/paperless.env
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    ports:
      - '8001:8000'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/paperless/data:/usr/src/paperless/data
      - /home/dulanic/docker/paperless/export:/usr/src/paperless/export      
      - /home/dulanic/docker/paperless/consume:/usr/src/paperless/consume
      - /home/dulanic/docker/paperless/media:/usr/src/paperless/media
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
      PGADMIN_DEFAULT_EMAIL: $USEREMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
      PGADMIN_LISTEN_PORT: 5050
      TZ: $TZ
    image: dpage/pgadmin4:latest
    ports:
      - '5050:5050'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/pgadmin/storage:/var/lib/pgadmin
      - /home/dulanic/docker/pgadmin/config_local.py:/pgadmin4/config_local.py
      - /home/dulanic/docker/pgadmin/pgadmin4.log:/var/lib/pgadmin/pgadmin4.log
      - /home/dulanic/docker/pgadmin/storage:/var/lib/pgadmin/storage/dulanic_gmail.com
  photoprism:
    container_name: photoprism
    devices:
      - /dev/dri:/dev/dri
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/photoprism.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl --fail -s https://photos.dulanic.com/ || exit 1
      timeout: 10s
    image: photoprism/photoprism:preview
    ports:
      - '2342:2342'
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    volumes:
      - /mnt/tank/photos/storage:/photoprism/storage
      - /mnt/tank/photo_import:/photoprism/import
      - /mnt/tank/photos/originals:/photoprism/originals
      - /home/dulanic/docker/photoprism/var/lib:/var/lib/photoprism
    working_dir: /photoprism
    
  phpmyadmin:
    container_name: phpmyadmin
    environment:
      - PMA_ARBITRARY=1
    image: phpmyadmin
    restart: unless-stopped
    user: ${PUID}:${PGID}
    volumes:
      - ~/docker/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.inc.php
      - /home/dulanic/docker/phpmyadmin/themes:/var/www/html/themes
      - /home/dulanic/docker/phpmyadmin/sessions:/sessions
      - ~/docker/phpmyadmin/tmp:/tmp
  plexautoskip:
    container_name: plexautoskip
 
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/plexautoskip.env
    image: ghcr.io/mdhiggins/plexautoskip-docker
    restart: always
    volumes:
      - /home/dulanic/docker/plexautoskip:/config


  prowlarr:
    container_name: prowlarr
    depends_on:
      - qbt
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/prowlarr.env
    image: lscr.io/linuxserver/prowlarr:develop
    ports:
      - '9696:9696'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/prowlarr:/config
  qbt:
    cap_add:
      - NET_ADMIN
    container_name: qbt
    dns:
      - 1.1.1.1
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
      - VPN_ENABLED=true
      - VPN_LAN_NETWORK=192.168.2.0/24
      - VPN_CONF=wg0
      - VPN_ADDITIONAL_PORTS
      - PRIVOXY_ENABLED=false
    image: ghcr.io/hotio/qbittorrent:release-4.5.5
    ports:
      - '8080:8080'
      - '8118:8118'
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
    volumes:
      - ./qbt:/config
      - /mnt:/mnt
    restart: unless-stopped
  qbt_manage:
    container_name: qbt_manage
    image: bobokun/qbit_manage:develop
    volumes:
      - /home/dulanic/docker/qbit_manage/:/config:rw
      - /mnt:/mnt
    user: ${PUID}:${PGID}
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/qbit_manage.env
    restart: unless-stopped

  readarr:
    container_name: readarr
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/readarr.env
    image: lscr.io/linuxserver/readarr:develop
    ports:
      - '8787:8787'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/readarr:/config
      - /mnt/tank/:/mnt/tank
  receipes:
    container_name: recipes
    # depends_on:
      # postgresql:
      #   condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/recipes.env
    image: vabene1111/recipes:latest
    ports:
      - '8087:8080'
    restart: always
    volumes:
      - /home/dulanic/docker/recipes/static:/opt/recipes/staticfiles
      - /home/dulanic/docker/recipes/media:/opt/recipes/mediafiles
  recyclarr:
    container_name: recyclarr
    restart: unless-stopped
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: ghcr.io/recyclarr/recyclarr
    init: true
    volumes:
      - /home/dulanic/docker/recyclarr:/config
  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - redisdata:/data
    restart: unless-stopped

  redisngx:
    container_name: redisngx
    healthcheck:
      interval: 10s
      retries: 10
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 45s
    image: redis:latest
    ports:
      - '6379:6379'
    restart: unless-stopped
  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
      - 8268:8268 # Example extra node port
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/tdarr.env
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ./tdarr/server:/app/server
      - ./tdarr/configs:/app/configs
      - ./tdarr/logs:/app/logs
      - /mnt/tank/media:/mnt/tank/media
      - /dev/shm:/temp
  teslamate:
    cap_drop:
      - all
    container_name: teslamate
    # depends_on:
    #   postgresql:
    #     condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/teslamate.env
    image: teslamate/teslamate:latest
    ports:
      - '4000:4000'
    restart: always
  thelounge:
    container_name: thelounge
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: thelounge/thelounge:latest
    ports:
      - '9013:9000'
    restart: always
    volumes:
      - /home/dulanic/docker/thelounge:/var/opt/thelounge
  unpackerr:
    container_name: unpackerr
    restart: unless-stopped
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/unpackerr.env
    image: cr.hotio.dev/hotio/unpackerr
    volumes:
      - /mnt/tank:/mnt/tank
      - /home/dulanic/docker/unpackerr:/config
  watchtower:
    command: '--interval 3600'
    container_name: watchtower
    image: containrrr/watchtower
    ports:
      - '8111:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
  wiki:
    container_name: wiki
    # depends_on:
    #   postgresql:
    #     condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/wiki.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl -f $WIKI || exit 1
      timeout: 10s
    image: requarks/wiki:latest
    ports:
      - '3009:3000'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/wiki:/wiki/data/content
      - /home/dulanic/docker/wiki/backups:/wiki/backups
  wordpress:
    container_name: wordpress
    # depends_on:
    #   mariadb:
    #     condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/wordpress.env
    image: wordpress
    ports:
      - '91:80'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/wordpress:/var/www/html
      - /home/dulanic/docker/envs/upload.ini:/usr/local/etc/php/conf.d/uploads.ini
  wordpress2:
    container_name: wordpress2
    # depends_on:
    #   mariadb:
    #     condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/wordpress2.env
    image: wordpress
    ports:
      - '92:80'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/wordpress2:/var/www/html
      - /home/dulanic/docker/envs/upload.ini:/usr/local/etc/php/conf.d/uploads.ini


version: '3.8'
volumes:
  mosquitto-conf: null
  mosquitto-data: null
  mosquitto-log: null
  redisdata: null
  redisnc: null
  redisngx: null
