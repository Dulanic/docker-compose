---
services:
  bitwarden:
    container_name: bitwarden
    env_file:
      - /home/dulanic/docker/envs/bw.env
    image: vaultwarden/server
    ports:
      - '8097:80'
      - '3012:3012'
    restart: unless-stopped
    volumes:
      - /home/dulanic/docker/bitwarden:/data
  caddy:
    container_name: caddy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/caddy.env
    image: ghcr.io/dulanic/caddy:v2.6.2
    ports:
      - '80:80'
      - '443:443'
    restart: always
    volumes:
      - /home/dulanic/docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - /home/dulanic/docker/caddy/subsites:/etc/caddy/subsites:ro
      - /home/dulanic/docker/caddy/mime.types:/etc/mime.types:ro
      - /home/dulanic/docker/caddy/data:/data
      - /home/dulanic/docker/caddy/config:/config
      - /home/dulanic/docker/caddy/img:/www/img:ro
      - /home/dulanic/docker/caddy/vid:/www/vid:ro
      - /home/dulanic/docker/caddy/css:/www/css:ro
      - /home/dulanic/docker/caddy/icons:/www/icons:ro
      - /home/dulanic/docker/caddy/files:/www/files:ro
      - /home/dulanic/docker/caddy/websites:/www/websites:ro
      - /home/dulanic/docker/nextcloud:/var/www/html
      - /home/dulanic/docker/recipes/media:/media
      - /mnt/btrfs/youtube:/www/ytdl:ro
      - /mnt/btrfs:/mnt/btrfs
  calibre-web:
    container_name: calibre-web
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: lscr.io/linuxserver/calibre-web:latest
    ports:
      - '8083:8083'
    restart: always
    volumes:
      - /home/dulanic/docker/calibre-web:/config
      - /mnt/btrfs/Media/Books:/books
  cf_ddns_acsigning:
    container_name: cf_ddns
    environment:
      - API_KEY=$CF_API_KEY
      - ZONE=$DOMAIN
      - SUBDOMAIN=wg
    image: oznu/cloudflare-ddns:latest
    restart: always
  chatgpt:
    container_name: chatgpt
    image: chatgpt:latest
    ports:
      - '9174:9174'
    volumes:
      - /home/dulanic/docker/chatgpt:/app
  cloudflared:
    command:
      - tunnel
      - '--no-autoupdate'
      - '--config'
      - /etc/cloudflared/dulanic.yaml
      - '--origincert'
      - /etc/cloudflared/dulanic.pem
      - run
    container_name: cloudflared
    image: cloudflare/cloudflared:2023.5.0
    restart: always
    user: '1000:1000'
    volumes:
      - /home/dulanic/docker/cloudflared:/etc/cloudflared
      - /home/dulanic/docker/cloudflared/cf.log:/cloudflared/cf.log
  collabora:
    cap_add:
      - MKNOD
    container_name: collabora
    depends_on:
      - caddy
    environment:
      - extra_params=-o:ssl.enable=false
    image: collabora/code
    ports:
      - '9980:9980'
    privileged: true
    volumes:
      - /home/dulanic/docker/collabora/coolwsd.xml:/etc/coolwsd/coolwsd.xml
  dmarc-report:
    container_name: dmarc-report
    depends_on:
      - mariadb
    env_file:
      - /home/dulanic/docker/envs/dmarc.env
    hostname: dmarc-report
    image: gutmensch/dmarc-report:1.4.1
    volumes:
      - ./dmarc/logs:/var/log
  epic:
    container_name: epic
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: charlocharlie/epicgames-freegames:bullseye-slim
    ports:
      - '3007:3000'
    restart: unless-stopped
    volumes:
      - ./epic:/usr/app/config
  filebrowser:
    container_name: filebrowser
    image: filebrowser/filebrowser:latest
    restart: always
    volumes:
      - /home/dulanic/docker/filebrowser/database.db:/database.db
      - /home/dulanic/docker/filebrowser/.filebrowser.json:/.filebrowser.json
      - /mnt/gd:/srv/gd
      - /mnt/gd:/mnt/gd
      - /mnt/btrfs/NAS:/srv/NAS
      - /mnt/btrfs/Media:/srv/Media
      - /mnt/btrfs/downloads/torrent:/srv/torrent
  fireshare:
    container_name: fireshare
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/fireshare.env
    image: shaneisrael/fireshare:latest
    ports:
      - '8091:80'
    volumes:
      - /home/dulanic/docker/fireshare/fireshare_data:/data
      - /home/dulanic/docker/fireshare/fireshare_processed:/processed
      - /home/dulanic/docker/fireshare/fireshare_videos:/videos
  flaresolverr:
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=true
      - TZ=America/Chicago
    image: ghcr.io/flaresolverr/flaresolverr:latest
    ports:
      - '8191:8191'
    restart: always
  freshrss:
    container_name: freshrss
    depends_on:
      postgresql:
        condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/freshrss.env
    image: freshrss/freshrss:latest
    ports:
      - '84:80'
    restart: always
    volumes:
      - /home/dulanic/docker/freshrss/data:/var/www/FreshRSS/data
      - /home/dulanic/docker/freshrss/extensions:/var/www/FreshRSS/extensions
  grafana:
    container_name: grafana-tesla
    depends_on:
      postgresql:
        condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/grafana.env
    image: ghcr.io/dulanic/grafana:main
    restart: always
    user: '1000'
    volumes:
      - /home/dulanic/docker/grafana:/var/lib/grafana
      - /home/dulanic/docker/grafana/log:/var/log/grafana
  heimdall:
    container_name: heimdall
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: lscr.io/linuxserver/heimdall:latest
    restart: always
    volumes:
      - /home/dulanic/docker/heimdall:/config
  homeassistant:
    container_name: homeassistant
    depends_on:
      postgresql:
        condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
    healthcheck:
      interval: 30s
      retries: 6
      test:
        - CMD
        - curl
        - '-f'
        - http://192.168.2.155:8123
      timeout: 10s
    image: homeassistant/home-assistant:stable
    ports:
      - '8123:8123'
    restart: always
    volumes:
      - /home/dulanic/docker/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /home:/home
  homepage:
    container_name: homepage
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: ghcr.io/benphelps/homepage:latest
    ports:
      - '3005:3000'
    volumes:
      - ./homepage:/app/config
      - /mnt/btrfs:/mnt/btrfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  mariadb:
    container_name: mariadb
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/mariadb.env
    healthcheck:
      interval: 10s
      retries: 10
      test:
        - CMD
        - mysqladmin
        - ping
        - '-h'
        - localhost
      timeout: 45s
    image: lscr.io/linuxserver/mariadb:latest
    ports:
      - '3306:3306'
    restart: always
    volumes:
      - /home/dulanic/docker/mariadb:/config
  mosquitto:
    container_name: mosquitto
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: eclipse-mosquitto:1.6
    ports:
      - '1883:1883'
    restart: always
    volumes:
      - mosquitto-conf:/mosquitto/config
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
  nextcloud:
    container_name: nextcloud
    depends_on:
      - caddy
      - collabora
      - redis
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/nextcloud.env
    image: lscr.io/linuxserver/nextcloud:latest
    ports:
      - '444:443'
    restart: always
    volumes:
      - /home/dulanic/docker/nextcloud:/config
      - /mnt/btrfs/photos/originals:/photos
      - /mnt/nextcloud:/data
      - /dev/dri:/dev/dri
  overseerr:
    container_name: overseerr
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: sctx/overseerr:latest
    ports:
      - '5055:5055'
    restart: always
    volumes:
      - /home/dulanic/docker/overseerr:/app/config
  paperless:
    container_name: paperless
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/paperless.env
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    ports:
      - '8000:8000'
    restart: always
    volumes:
      - /home/dulanic/docker/paperless/config:/config
      - /home/dulanic/docker/paperless/data:/data
      - /home/dulanic/docker/paperless/consume:/data/consume
      - /mnt/gd/paperless:/backup
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
      PGADMIN_DEFAULT_EMAIL: $USEREMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
      PGADMIN_LISTEN_PORT: 5050
      TZ: $TZ
    image: dpage/pgadmin4:latest
    ports:
      - '5050:5050'
    restart: always
    volumes:
      - /home/dulanic/docker/pgadmin/storage:/var/lib/pgadmin
      - /home/dulanic/docker/pgadmin/config_local.py:/pgadmin4/config_local.py
      - /home/dulanic/docker/pgadmin/pgadmin4.log:/var/lib/pgadmin/pgadmin4.log
      - /home/dulanic/docker/pgadmin/storage:/var/lib/pgadmin/storage/dulanic_gmail.com
  photoprism:
    container_name: photoprism
    depends_on:
      mariadb:
        condition: service_healthy
    devices:
      - /dev/dri:/dev/dri
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/photoprism.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl --fail -s https://photos.dulanic.com/ || exit 1
      timeout: 10s
    image: photoprism/photoprism:preview
    ports:
      - '2342:2342'
    restart: always
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    volumes:
      - /mnt/btrfs/photos/storage:/photoprism/storage
      - /mnt/btrfs/photo_import:/photoprism/import
      - /mnt/btrfs/photos/originals:/photoprism/originals
      - /home/dulanic/docker/photoprism/var/lib:/var/lib/photoprism
    working_dir: /photoprism
  phpmyadmin:
    container_name: phpmyadmin
    environment:
      - PMA_ARBITRARY=1
    image: phpmyadmin
    restart: always
    user: ${PUID}:${PGID}
    volumes:
      - /sessions
      - ~/docker/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.inc.php
      - /home/dulanic/docker/phpmyadmin/themes:/var/www/html/themes
      - ~/docker/phpmyadmin/tmp:/tmp
  plex:
    container_name: plex
    devices:
      - /dev/dri
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/plex.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl -f -s $PLEX || exit 1
      timeout: 10s
    image: lscr.io/linuxserver/plex:latest
    network_mode: host
    restart: always
    volumes:
      - /home/dulanic/docker/plex:/config
      - /mnt/btrfs/transcode:/transcode
      - /mnt:/mnt
  plexautoskip:
    container_name: plexautoskip
    depends_on:
      - plex
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/plexautoskip.env
    image: ghcr.io/mdhiggins/plexautoskip-docker
    restart: always
    volumes:
      - /home/dulanic/docker/plexautoskip:/config
  postgresql:
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200
    container_name: postgresql
    cpus: 1
    env_file:
      - /home/dulanic/docker/envs/postgres.env
    healthcheck:
      interval: 10s
      retries: 10
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - ${DB_NAME}
        - '-U'
        - ${DB_USER}
      timeout: 45s
    image: postgres:15.1-alpine
    mem_limit: 4092m
    ports:
      - '5432:5432'
    restart: always
    shm_size: 1gb
    volumes:
      - /home/dulanic/docker/postgresql/data:/var/lib/postgresql/data
      - /home/dulanic/docker/import:/import
      - /mnt/btrfs:/mnt/btrfs
      - /home:/home
  prowlarr:
    container_name: prowlarr
    depends_on:
      - qbt
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/prowlarr.env
    image: lscr.io/linuxserver/prowlarr:develop
    ports:
      - '9696:9696'
    restart: always
    volumes:
      - /home/dulanic/docker/prowlarr:/config
  qbt:
    cap_add:
      - NET_ADMIN
    container_name: qbt
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
      - VPN_ENABLED=true
      - VPN_LAN_NETWORK
      - VPN_CONF=wg0
      - VPN_ADDITIONAL_PORTS
      - PRIVOXY_ENABLED=false
    image: cr.hotio.dev/hotio/qbittorrent
    ports:
      - '8080:8080'
      - '8118:8118'
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
    volumes:
      - ./qbt:/config
      - /mnt:/mnt
  radarr:
    container_name: radarr
    depends_on:
      - qbt
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/radarr.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl --fail -s $RADARR || exit 1
      timeout: 10s
    image: lscr.io/linuxserver/radarr:latest
    ports:
      - '7878:7878'
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - /home/dulanic/docker/radarr:/config
      - /mnt/:/mnt
      - /home/dulanic/docker/scripts/wait-for-mounts.sh:/scripts/wait-for-mounts.sh
  radarr4k:
    container_name: radarr4k
    depends_on:
      - qbt
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/radarr4k.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl --fail -s $RADARR4K || exit 1
      timeout: 10s
    image: lscr.io/linuxserver/radarr:latest
    ports:
      - '7879:7878'
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - /home/dulanic/docker/radarr4K:/config
      - /mnt:/mnt
      - /mnt/btrfs/downloads:/mnt/btrfs/downloads
  readarr:
    container_name: readarr
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/readarr.env
    image: lscr.io/linuxserver/readarr:develop
    ports:
      - '8787:8787'
    restart: always
    volumes:
      - /home/dulanic/docker/readarr:/config
      - /mnt/btrfs/:/mnt/btrfs
  receipes:
    container_name: recipes
    depends_on:
      postgresql:
        condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/recipes.env
    image: vabene1111/recipes:latest
    ports:
      - '8087:8080'
    restart: always
    volumes:
      - /home/dulanic/docker/recipes/static:/opt/recipes/staticfiles
      - /home/dulanic/docker/recipes/media:/opt/recipes/mediafiles
  recyclarr:
    container_name: recyclarr
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: ghcr.io/recyclarr/recyclarr
    init: true
    volumes:
      - /home/dulanic/docker/recyclarr:/config
  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - redisdata:/data
  redisngx:
    container_name: redisngx
    healthcheck:
      interval: 10s
      retries: 10
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 45s
    image: redis:latest
    ports:
      - '6379:6379'
    restart: always
  sonarr:
    container_name: sonarr
    depends_on:
      - qbt
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/sonarr.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl --fail -s $SONARR || exit 1
      timeout: 10s
    image: lscr.io/linuxserver/sonarr:develop
    ports:
      - '8989:8989'
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - /home/dulanic/docker/sonarr:/config
      - /mnt:/mnt
      - /mnt/btrfs/downloads:/mnt/btrfs/downloads
      - /home/dulanic/docker/sonarr/logs:/home/dulanic/docker/sonarr/logs
  sopel:
    container_name: sopel
    env_file:
      - /home/dulanic/docker/envs/main.env
      - /home/dulanic/docker/envs/sopel.env
    image: sopelirc/sopel:latest
    volumes:
      - /home/dulanic/docker/sopel:/home/sopel/.sopel
  syncthing:
    container_name: syncthing
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: lscr.io/linuxserver/syncthing:latest
    ports:
      - '8384:8384'
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: always
    volumes:
      - /home/dulanic/docker/syncthing:/config
      - /mnt/btrfs/syncthing:/data1
      - /mnt/btrfs:/mnt/btrfs
  tautulli:
    container_name: tautulli
    depends_on:
      - plex
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: lscr.io/linuxserver/tautulli:latest
    ports:
      - '8181:8181'
    restart: always
    volumes:
      - /home/dulanic/docker/tautulli/config:/config
      - /home/dulanic/docker/plex/Library/Application Support/Plex Media Server/Logs:/logs
  teslacamviewer:
    container_name: teslacamviewer
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - rootFolder=/teslacamdata
      - authorizationEnabled=false
    image: ghcr.io/rufogongora/teslacamviewer:main
    ports:
      - '7544:80'
    restart: always
    volumes:
      - /mnt/gd/teslausb:/teslacamdata
  teslamate:
    cap_drop:
      - all
    container_name: teslamate
    depends_on:
      postgresql:
        condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/teslamate.env
    image: teslamate/teslamate:latest
    ports:
      - '4000:4000'
    restart: always
  thelounge:
    container_name: thelounge
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: thelounge/thelounge:latest
    ports:
      - '9013:9000'
    restart: always
    volumes:
      - /home/dulanic/docker/thelounge:/var/opt/thelounge
  theme-park:
    container_name: theme-park
    env_file:
      - /home/dulanic/docker/envs/common.env
    image: ghcr.io/gilbn/theme.park
    ports:
      - '8084:80'
    restart: always
    volumes:
      - /home/dulanic/docker/themepark:/config
  unpackerr:
    container_name: unpackerr
    depends_on:
      - radarr
      - sonarr
      - radarr4k
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/unpackerr.env
    image: cr.hotio.dev/hotio/unpackerr
    volumes:
      - /mnt/btrfs:/mnt/btrfs
  vscode:
    container_name: vscode
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/openvscode.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl --fail -s $VSCODE || exit 1
      timeout: 10s
    image: lscr.io/linuxserver/openvscode-server:1.63.2
    ports:
      - '3001:3000'
    restart: always
    volumes:
      - /home/dulanic/docker/openvscode/config:/config
      - /home/dulanic/.ssh:/config/.ssh
      - /var/run/docker.sock:/var/run/docker.sock
      - /coserv:/coserv
      - /home/dulanic:/home/dulanic
      - /home/dulanic/bin/caddy:/bin/caddy
      - /mnt/btrfs:/mnt/btrfs
      - /home/dulanic/bin/chromedriver:/usr/lib/chromium-browser/chromedriver
      - /home/dulanic/docker/custom/vscode:/config/custom-cont-init.d
  watchtower:
    command: '--interval 3600'
    container_name: watchtower
    image: containrrr/watchtower
    ports:
      - '8111:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
  webtop:
    container_name: webtop
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - SUBFOLDER=/
      - KEYBOARD=en-us-qwerty
      - TITLE=Webtop
    image: lscr.io/linuxserver/webtop:ubuntu-mate
    ports:
      - '3000:3000'
    restart: always
    security_opt:
      - seccomp:unconfined
    shm_size: 6gb
    volumes:
      - ./webtop:/config
      - /mnt/btrfs/photos:/mnt/btrfs/photos
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/dulanic/docker/custom/webtop:/custom-cont-init.d:ro
  wiki:
    container_name: wiki
    depends_on:
      postgresql:
        condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/wiki.env
    healthcheck:
      interval: 1m30s
      retries: 3
      test: curl -f $WIKI || exit 1
      timeout: 10s
    image: requarks/wiki:latest
    ports:
      - '3009:3000'
    restart: always
    volumes:
      - /home/dulanic/docker/wiki:/wiki/data/content
      - /home/dulanic/docker/wiki/backups:/wiki/backups
  wireguardserver:
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: wireguardserver
    env_file:
      - /home/dulanic/docker/envs/wireguardserv.env
    image: lscr.io/linuxserver/wireguard
    ports:
      - 51820:51820/udp
    restart: always
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - /home/dulanic/docker/wireguardserver:/config
      - /lib/modules:/lib/modules
  wordpress:
    container_name: wordpress
    depends_on:
      mariadb:
        condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/wordpress.env
    image: wordpress
    ports:
      - '91:80'
    restart: always
    volumes:
      - /home/dulanic/docker/wordpress:/var/www/html
      - /home/dulanic/docker/envs/upload.ini:/usr/local/etc/php/conf.d/uploads.ini
  wordpress2:
    container_name: wordpress2
    depends_on:
      mariadb:
        condition: service_healthy
    env_file:
      - /home/dulanic/docker/envs/common.env
      - /home/dulanic/docker/envs/wordpress2.env
    image: wordpress
    ports:
      - '92:80'
    restart: always
    volumes:
      - /home/dulanic/docker/wordpress2:/var/www/html
      - /home/dulanic/docker/envs/upload.ini:/usr/local/etc/php/conf.d/uploads.ini
  wsdd:
    container_name: wsdd
    environment:
      - HOSTNAME=mediaserver
    image: jonasped/wsdd
    network_mode: host
    restart: always
  ytdl:
    container_name: ytdl
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - YOUTUBE_DL_PATH=/downloads
      - YOUTUBE_DL_SERVER_PORT=8080
      - YOUTUBE_DL_SERVER_HOST=ytdl.dulanic.com
      - youtubedl_webui=true
    image: jeeaaasustest/youtube-dl
    restart: always
    volumes:
      - /home/dulanic/docker/fireshare/fireshare_videos/ytdl:/youtube-dl
      - /home/dulanic/docker/youtube-dl/config:/config
      - /home/dulanic/docker/youtube-dl/downloads:/downloads
version: '3.8'
volumes:
  mosquitto-conf: null
  mosquitto-data: null
  mosquitto-log: null
  redisdata: null
  redisnc: null
  redisngx: null